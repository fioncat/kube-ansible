- name: Prepare groups
  import_tasks: "{{ playbook_dir }}/tasks/group.yml"

- name: Generate etcd names
  set_fact:
    etcd_names: "{% set etcd_names={} %}{% for node, hostvar in etcd_nodes.items() %}{% if 'etcd_name' in hostvar %}{% set x=etcd_names.__setitem__(node, hostvar['etcd_name']) %}{% else %}{% set x=etcd_names.__setitem__(node, 'etcd{0}'.format(loop.index)) %}{% endif %}{% endfor %}{{ etcd_names }}"

- name: Generate etcd urls
  set_fact:
    etcd_peers: "{% set urls=[] %}{% for node,name in etcd_names.items() %}{{ urls.append('{0}=https://{1}:2380'.format(name, node)) }}{% endfor %}{{ urls | join(',') }}"
    etcd_endpoints: "{% set urls=[] %}{% for node in etcd_nodes %}{{ urls.append('https://{0}:2379'.format(node)) }}{% endfor %}{{ urls | join(',') }}"

- name: Prepare directory
  file: path="{{ item }}" state=directory mode=0755
  with_items:
    - /etc/etcd
    - /etc/etcd/pki
    - /var/lib/etcd

- name: Prepare config
  template:
    src: config.yaml
    dest: /etc/etcd/config.yaml

- name: Prepare etcdctl config
  template:
    src: etcdctl.env
    dest: /etc/etcd/etcdctl.env

- name: Copy cert
  copy:
    src: "{{ playbook_dir }}/pki/etcd/"
    dest: /etc/etcd/pki

- name: Copy binary
  copy:
    src: "{{ playbook_dir }}/binary/etcd/{{ item }}"
    dest: "/usr/local/bin"
    mode: "0755"
  with_items:
    - etcd
    - etcdctl

- name: Prepare service
  copy:
    src: "etcd.service"
    dest: "/usr/lib/systemd/system/etcd.service"

- name: Start service
  systemd:
    name: etcd
    state: restarted
    enabled: yes
    daemon_reload: yes
